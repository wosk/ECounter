<!DOCTYPE html>
<html>

<head>
	<!-- Required meta tags -->
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

	<!-- Bootstrap CSS -->
	<link rel="stylesheet" href="src/bootstrap.min.css">
	<title>Resourse Counter</title>
</head>

<body>
	<div class="container">
		<header class="d-flex flex-wrap justify-content-center py-1 mb-2 border-bottom">
			<a href="/" class="d-flex align-items-center me-sm-auto text-dark text-decoration-none">
				<span class="fs-4">Counter</span>
			</a>

			<ul class="nav nav-pills">
				<li class="nav-item"><a href="index.htm" class="nav-link">Main</a></li>
				<li class="nav-item"><a href="graph.htm" class="nav-link active" aria-current="page">Graph</a></li>
				<li class="nav-item"><a href="config.htm" class="nav-link">Settings</a></li>
			</ul>
		</header>
	</div>

	<div class="mx-auto col-10">
		<nav aria-label="Page navigation">
			<ul class="pagination justify-content-end">
				<li class="page-item">
					<a class="page-link" href="#" aria-label="Previous">
						<span aria-hidden="true">&laquo;</span>
					</a>
				</li>
				<li class="page-item"><a class="page-link" href="#">Cur Month</a></li>
				<li class="page-item">
					<a class="page-link" href="#" aria-label="Next">
						<span aria-hidden="true">&raquo;</span>
					</a>
				</li>
			</ul>
		</nav>
		<div>
			<canvas id="myChart"></canvas>
		</div>
	</div>



	<!-- https://www.chartjs.org/docs/latest/charts/bar.html -->
	<script src="src/chart.min.js"></script>
	<!-- http://gionkunz.github.io/chartist-js/examples.html -->
	<!--script src="src/chartist.min.js"></script-->
	<script type="module" src="src/date-fns.min.js"></script>
	<script src="src/chartjs-adapter-date-fns.bundle.min.js"></script>

	<script type="module">
		//import { foo, bar } from  "./module.js";
		//import {de} from './src/date-fns.min.js';
		//import { de } from './src/date-fns.min.js';
		//import { de } from './src/chartjs-adapter-date-fns.bundle.min.js';


		function FetchHourly() {
			var xhttp = new XMLHttpRequest();
			xhttp.onreadystatechange = function () {
				if (this.readyState == 4 && this.status == 200) {
					var str = this.responseText;
					var Arr = str.split("|");
					hChart(Arr);
				}
			};
			xhttp.open("GET", "/get?h", true);
			xhttp.send();
		}

		function hChart(hArr) {
			let hours = [];
			for (let i = 0; i < 24; i++) {
				hours[i] = i;
			}

			var i = hArr.length;
			var Sum = 0;
			while (i--) {
				var fl = parseFloat(hArr[i]);
				if (isNaN(fl))
					continue;
				Sum += fl;
			}
			console.log(Sum);
			var label = "In sum for day " + Sum;

			const data = {
				labels: hours,
				datasets: [{
					label: label,
					data: hArr,
					borderWidth: 1
				}]
			};

			// function clickHandler(evt) {
			// 	const points = myChart.getElementsAtEventForMode(evt, 'nearest', { intersect: true }, true);

			// 	if (points.length) {
			// 		const firstPoint = points[0];
			// 		const label = myChart.data.labels[firstPoint.index];
			// 		const value = myChart.data.datasets[firstPoint.datasetIndex].data[firstPoint.index];
			// 	}
			// }

			const config = {
				type: 'bar',
				data: data,
				options: {
					scales: {
						y: {
							beginAtZero: true
						}
					},
					//onClick: clickHandler
				},
			};

			// const myChart = new Chart(
			// 	document.getElementById('myChart'),
			// 	config
			// );
		}




		function TestChart() {
			let hours = [];
			for (let i = 0; i < 3; i++) {
				hours[i] = i * 2;
			}


			var ctx = document.getElementById('myChart');

			// const data = {
			// 	data: [12, 123, 11],
			// 	labels: hours,
			// };
			// var chart = new Chart(ctx, {
			// 	type: 'line',
			// 	data: data,
			// 	options: {
			// 		scales: {
			// 			x: {
			// 				type: 'time',
			// 				time: {
			// 					unit: 'month'
			// 				}
			// 			}
			// 		}
			// 	}
			// });

			debugger;
			//const months = Utils.months({count: 7});
			const months = ["Jan", "Feb", "March", "sdf"]
			const data = [{ x: 'Jan', net: 100, cogs: 50, gm: 50 }, { x: 'Feb', net: 120, cogs: 55, gm: 75 }];
			const chart = new Chart(ctx, {
				type: 'line',
				data: data,
				labels: months,
				options: {
					scales: {
						x: {
							type: 'time',
							// time: {
							// 		// unit: 'hour',
							// 		// displayFormats: {
							// 		// 	month: 'dd MMM yy',
							// 		// },
							// }
						}
					}
				}
			});

			// const data = [{ x: 'Jan', net: 100, cogs: 50, gm: 50 }, { x: 'Feb', net: 120, cogs: 55, gm: 75 }];
			// const chart = new Chart(ctx,
			// 	{
			// 		type: 'line',
			// 		data: data,
			// 		// data: hours,
			// 		// labels: hours,
			// 		//data: [{x:'Sales', y:20}, {x:'Revenue', y:10}],
			// 		// data: {
			// 		// 	labels: ['Jan', 'Feb'],
			// 		// 	datasets: [{
			// 		// 		label: 'Net sales',
			// 		// 		data: data,
			// 		// 		parsing: {
			// 		// 			yAxisKey: 'net'
			// 		// 		}
			// 		// 	}, {
			// 		// 		label: 'Cost of goods sold',
			// 		// 		data: data,
			// 		// 		parsing: {
			// 		// 			yAxisKey: 'cogs'
			// 		// 		}
			// 		// 	}, {
			// 		// 		label: 'Gross margin',
			// 		// 		data: data,
			// 		// 		parsing: {
			// 		// 			yAxisKey: 'gm'
			// 		// 		}
			// 		// 	}]
			// 		// },
			// 		options: {
			// 			scales: {
			// 				y: {
			// 					beginAtZero: true
			// 				},
			// 				x: {
			// 					// adapters: {
			// 					// 	date: {
			// 					// 		locale: de
			// 					// 	}
			// 					// },
			// 					type: 'time',
			// 					distribution: 'linear',
			// 					time: {
			// 						unit: 'month',
			// 						displayFormats: {
			// 							month: 'dd MMM yy',
			// 						},
			// 					}
			// 				}
			// 			}
			// 		}
			// 	});
		}

		function Debug() {
			var Arr = [0, 1, 2, 3, 4, 5, 6, 7, 8]
			//hChart(Arr);
			//debugger;
			TestChart();
		}
		//FetchHourly();
		Debug();
	</script>
</body>

</html>